#subset sum program
import pprint
numbers = []
def is_subset_sum(new_set, sum):
    DP = [[False for i in range(0, sum+1)]for i in range(0, len(new_set)+1)]
    for i in range(0, len(new_set) + 1):
        DP[i][0] = True;
    for i in range(1, len(new_set)+1):
        for j in range(1, sum +1):
            if new_set[i-1] > j:
                DP[i][j] = DP[i-1][j]
            elif DP[i-1][j] == True:
                DP[i][j] = True
            else:
                DP[i][j] = DP[i-1][j-new_set[i-1]]
    #preparing set
    i = len(new_set)
    j = sum
    while(i >= 0 and j >= 0):
        if DP[i][j] == False:
            return False
        else:
            #Traceback
            if DP[i-1][j] == DP[i][j]: #moving ahead else include in set
                  i-=1;
            else:
                numbers.append(new_set[i-1]);
                i-=1
                j-= new_set[i];
    pass
def main():
    global numbers
    s = [3, 34, 4, 12, 5, 2]
    new_set = []
    sum = 9
    for i in s:
        if i <= sum:
            new_set.append(i);
    value = is_subset_sum(new_set, sum)
    if value == False:
        print ("False")
    else:
        print ("True")
        pprint (numbers)
    pass
main()
